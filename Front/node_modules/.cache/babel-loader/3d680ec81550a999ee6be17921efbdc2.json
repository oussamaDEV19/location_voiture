{"ast":null,"code":"import { formatError, login, runLogoutTimer, saveTokenInLocalStorage } from '../../services/AuthService';\nexport const SIGNUP_CONFIRMED_ACTION = '[signup action] confirmed signup';\nexport const SIGNUP_FAILED_ACTION = '[signup action] failed signup';\nexport const LOGIN_CONFIRMED_ACTION = '[login action] confirmed login';\nexport const LOGIN_FAILED_ACTION = '[login action] failed login';\nexport const LOADING_TOGGLE_ACTION = '[Loading action] toggle loading';\nexport const LOGOUT_ACTION = '[Logout action] logout action';\nexport function signupAction(email, password, history) {\n  return dispatch => {\n    signUp(email, password).then(response => {\n      saveTokenInLocalStorage(response.data);\n      runLogoutTimer(dispatch, response.data.expiresIn * 1000, history);\n      dispatch(confirmedSignupAction(response.data));\n      history.push('/');\n    }).catch(error => {\n      const errorMessage = formatError(error.response.data);\n      dispatch(signupFailedAction(errorMessage));\n    });\n  };\n}\nexport function logout(history) {\n  localStorage.removeItem('userDetails');\n  history.push('/login');\n  return {\n    type: LOGOUT_ACTION\n  };\n}\nexport function loginAction(email, password, history) {\n  return dispatch => {\n    login(email, password).then(response => {\n      saveTokenInLocalStorage(response.data);\n      runLogoutTimer(dispatch, response.data.expiresIn * 1000, history);\n      dispatch(loginConfirmedAction(response.data));\n      history.push('/');\n      window.location.reload();\n    }).catch(error => {\n      const errorMessage = formatError(error.response.data);\n      dispatch(loginFailedAction(errorMessage));\n    });\n  };\n}\nexport function loginFailedAction(data) {\n  return {\n    type: LOGIN_FAILED_ACTION,\n    payload: data\n  };\n}\nexport function loginConfirmedAction(data) {\n  return {\n    type: LOGIN_CONFIRMED_ACTION,\n    payload: data\n  };\n}\nexport function confirmedSignupAction(payload) {\n  return {\n    type: SIGNUP_CONFIRMED_ACTION,\n    payload\n  };\n}\nexport function signupFailedAction(message) {\n  return {\n    type: SIGNUP_FAILED_ACTION,\n    payload: message\n  };\n}\nexport function loadingToggleAction(status) {\n  return {\n    type: LOADING_TOGGLE_ACTION,\n    payload: status\n  };\n}","map":{"version":3,"sources":["C:/Users/XpS/Desktop/MERN-LOCATION-VOITURE/Front/src/store/actions/AuthActions.js"],"names":["formatError","login","runLogoutTimer","saveTokenInLocalStorage","SIGNUP_CONFIRMED_ACTION","SIGNUP_FAILED_ACTION","LOGIN_CONFIRMED_ACTION","LOGIN_FAILED_ACTION","LOADING_TOGGLE_ACTION","LOGOUT_ACTION","signupAction","email","password","history","dispatch","signUp","then","response","data","expiresIn","confirmedSignupAction","push","catch","error","errorMessage","signupFailedAction","logout","localStorage","removeItem","type","loginAction","loginConfirmedAction","window","location","reload","loginFailedAction","payload","message","loadingToggleAction","status"],"mappings":"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","sourcesContent":["\nimport {\n    formatError,\n    login,\n    runLogoutTimer,\n    saveTokenInLocalStorage,\n} from '../../services/AuthService';\n\n\nexport const SIGNUP_CONFIRMED_ACTION = '[signup action] confirmed signup';\nexport const SIGNUP_FAILED_ACTION = '[signup action] failed signup';\nexport const LOGIN_CONFIRMED_ACTION = '[login action] confirmed login';\nexport const LOGIN_FAILED_ACTION = '[login action] failed login';\nexport const LOADING_TOGGLE_ACTION = '[Loading action] toggle loading';\nexport const LOGOUT_ACTION = '[Logout action] logout action';\n\nexport function signupAction(email, password, history) {\n    return (dispatch) => {\n        signUp(email, password)\n        .then((response) => {\n            saveTokenInLocalStorage(response.data);\n            runLogoutTimer(\n                dispatch,\n                response.data.expiresIn * 1000,\n                history,\n            );\n            dispatch(confirmedSignupAction(response.data));\n            history.push('/');\n        })\n        .catch((error) => {\n            const errorMessage = formatError(error.response.data);\n            dispatch(signupFailedAction(errorMessage));\n        });\n    };\n}\n\nexport function logout(history) {\n    localStorage.removeItem('userDetails');\n    history.push('/login');\n    return {\n        type: LOGOUT_ACTION,\n    };\n}\n\nexport function loginAction(email, password, history) {\n    return (dispatch) => {\n        login(email, password)\n            .then((response) => {\n                saveTokenInLocalStorage(response.data);\n                runLogoutTimer(\n                    dispatch,\n                    response.data.expiresIn * 1000,\n                    history,\n                );\n               dispatch(loginConfirmedAction(response.data));\n\t\t\t\thistory.push('/');\n                window.location.reload();\n\t\t\t\t\n            })\n            .catch((error) => {\n                const errorMessage = formatError(error.response.data);\n                dispatch(loginFailedAction(errorMessage));\n            });\n    };\n}\n\nexport function loginFailedAction(data) {\n    return {\n        type: LOGIN_FAILED_ACTION,\n        payload: data,\n    };\n}\n\nexport function loginConfirmedAction(data) {\n    return {\n        type: LOGIN_CONFIRMED_ACTION,\n        payload: data,\n    };\n}\n\nexport function confirmedSignupAction(payload) {\n    return {\n        type: SIGNUP_CONFIRMED_ACTION,\n        payload,\n    };\n}\n\nexport function signupFailedAction(message) {\n    return {\n        type: SIGNUP_FAILED_ACTION,\n        payload: message,\n    };\n}\n\nexport function loadingToggleAction(status) {\n    return {\n        type: LOADING_TOGGLE_ACTION,\n        payload: status,\n    };\n}\n"]},"metadata":{},"sourceType":"module"}