{"ast":null,"code":"import axiosInstance from '../services/AxiosInstance';\nexport function getPosts() {\n  return axiosInstance.get(`posts.json`);\n}\nexport function createPost(postData) {\n  return axiosInstance.post(`posts.json`, postData);\n}\nexport function updatePost(post, postId) {\n  return axiosInstance.put(`posts/${postId}.json`, post);\n}\nexport function deletePost(postId) {\n  return axiosInstance.delete(`posts/${postId}.json`);\n}\nexport function formatPosts(postsData) {\n  let posts = [];\n\n  for (let key in postsData) {\n    posts.push({ ...postsData[key],\n      id: key\n    });\n  }\n\n  return posts;\n}","map":{"version":3,"sources":["C:/Users/XpS/Desktop/MERN-LOCATION-VOITURE/Front/src/services/PostsService.js"],"names":["axiosInstance","getPosts","get","createPost","postData","post","updatePost","postId","put","deletePost","delete","formatPosts","postsData","posts","key","push","id"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,2BAA1B;AAEA,OAAO,SAASC,QAAT,GAAoB;AACvB,SAAOD,aAAa,CAACE,GAAd,CAAmB,YAAnB,CAAP;AACH;AAED,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AACjC,SAAOJ,aAAa,CAACK,IAAd,CAAoB,YAApB,EAAiCD,QAAjC,CAAP;AACH;AAED,OAAO,SAASE,UAAT,CAAoBD,IAApB,EAA0BE,MAA1B,EAAkC;AACrC,SAAOP,aAAa,CAACQ,GAAd,CAAmB,SAAQD,MAAO,OAAlC,EAA0CF,IAA1C,CAAP;AACH;AAED,OAAO,SAASI,UAAT,CAAoBF,MAApB,EAA4B;AAC/B,SAAOP,aAAa,CAACU,MAAd,CAAsB,SAAQH,MAAO,OAArC,CAAP;AACH;AAED,OAAO,SAASI,WAAT,CAAqBC,SAArB,EAAgC;AACnC,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,GAAT,IAAgBF,SAAhB,EAA2B;AACvBC,IAAAA,KAAK,CAACE,IAAN,CAAW,EAAE,GAAGH,SAAS,CAACE,GAAD,CAAd;AAAqBE,MAAAA,EAAE,EAAEF;AAAzB,KAAX;AACH;;AAED,SAAOD,KAAP;AACH","sourcesContent":["import axiosInstance from '../services/AxiosInstance';\n\nexport function getPosts() {\n    return axiosInstance.get(`posts.json`);\n}\n\nexport function createPost(postData) {\n    return axiosInstance.post(`posts.json`, postData);\n}\n\nexport function updatePost(post, postId) {\n    return axiosInstance.put(`posts/${postId}.json`, post);\n}\n\nexport function deletePost(postId) {\n    return axiosInstance.delete(`posts/${postId}.json`);\n}\n\nexport function formatPosts(postsData) {\n    let posts = [];\n    for (let key in postsData) {\n        posts.push({ ...postsData[key], id: key });\n    }\n\n    return posts;\n}\n"]},"metadata":{},"sourceType":"module"}