{"ast":null,"code":"import { createPost, formatPosts, getPosts, deletePost, updatePost } from '../../services/PostsService';\nimport { CONFIRMED_CREATE_POST_ACTION, CONFIRMED_DELETE_POST_ACTION, CONFIRMED_EDIT_POST_ACTION, CONFIRMED_GET_POSTS } from './PostTypes';\nexport function deletePostAction(postId, history) {\n  return (dispatch, getState) => {\n    deletePost(postId).then(response => {\n      dispatch(confirmedDeletePostAction(postId));\n      history.push('/posts');\n    });\n  };\n}\nexport function confirmedDeletePostAction(postId) {\n  return {\n    type: CONFIRMED_DELETE_POST_ACTION,\n    payload: postId\n  };\n}\nexport function createPostAction(postData, history) {\n  return (dispatch, getState) => {\n    console.log(postData);\n    console.log('create');\n    createPost(postData).then(response => {\n      //console.log(response);\n      const singlePost = { ...postData,\n        id: response.data.name\n      };\n      dispatch(confirmedCreatePostAction(singlePost));\n      history.push('/posts');\n    });\n  };\n}\nexport function getPostsAction() {\n  return (dispatch, getState) => {\n    getPosts().then(response => {\n      console.log(response);\n      let posts = formatPosts(response.data);\n      dispatch(confirmedGetPostsAction(posts));\n    });\n  };\n}\nexport function confirmedCreatePostAction(singlePost) {\n  return {\n    type: CONFIRMED_CREATE_POST_ACTION,\n    payload: singlePost\n  };\n}\nexport function confirmedGetPostsAction(posts) {\n  return {\n    type: CONFIRMED_GET_POSTS,\n    payload: posts\n  };\n}\nexport function confirmedUpdatePostAction(post) {\n  return {\n    type: CONFIRMED_EDIT_POST_ACTION,\n    payload: post\n  };\n}\nexport function updatePostAction(post, history) {\n  return (dispatch, getState) => {\n    updatePost(post, post.id).then(reponse => {\n      //console.log(reponse);\n      dispatch(confirmedUpdatePostAction(post));\n      history.push('/posts');\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/XpS/Desktop/MERN-LOCATION-VOITURE - Copy/Front/src/store/actions/PostActions.js"],"names":["createPost","formatPosts","getPosts","deletePost","updatePost","CONFIRMED_CREATE_POST_ACTION","CONFIRMED_DELETE_POST_ACTION","CONFIRMED_EDIT_POST_ACTION","CONFIRMED_GET_POSTS","deletePostAction","postId","history","dispatch","getState","then","response","confirmedDeletePostAction","push","type","payload","createPostAction","postData","console","log","singlePost","id","data","name","confirmedCreatePostAction","getPostsAction","posts","confirmedGetPostsAction","confirmedUpdatePostAction","post","updatePostAction","reponse"],"mappings":"AAAA,SACIA,UADJ,EAEIC,WAFJ,EAGIC,QAHJ,EAIIC,UAJJ,EAKIC,UALJ,QAMO,6BANP;AAOA,SACIC,4BADJ,EAEIC,4BAFJ,EAGIC,0BAHJ,EAIIC,mBAJJ,QAKO,aALP;AAOA,OAAO,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,OAAlC,EAA2C;AAC9C,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BV,IAAAA,UAAU,CAACO,MAAD,CAAV,CAAmBI,IAAnB,CAAyBC,QAAD,IAAc;AAClCH,MAAAA,QAAQ,CAACI,yBAAyB,CAACN,MAAD,CAA1B,CAAR;AACAC,MAAAA,OAAO,CAACM,IAAR,CAAa,QAAb;AACH,KAHD;AAIH,GALD;AAMH;AAED,OAAO,SAASD,yBAAT,CAAmCN,MAAnC,EAA2C;AAC9C,SAAO;AACHQ,IAAAA,IAAI,EAAEZ,4BADH;AAEHa,IAAAA,OAAO,EAAET;AAFN,GAAP;AAIH;AAED,OAAO,SAASU,gBAAT,CAA0BC,QAA1B,EAAoCV,OAApC,EAA6C;AAEnD,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC9BS,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACMvB,IAAAA,UAAU,CAACqB,QAAD,CAAV,CAAqBP,IAArB,CAA2BC,QAAD,IAAc;AAC7C;AACS,YAAMS,UAAU,GAAG,EACf,GAAGH,QADY;AAEfI,QAAAA,EAAE,EAAEV,QAAQ,CAACW,IAAT,CAAcC;AAFH,OAAnB;AAIAf,MAAAA,QAAQ,CAACgB,yBAAyB,CAACJ,UAAD,CAA1B,CAAR;AACAb,MAAAA,OAAO,CAACM,IAAR,CAAa,QAAb;AACH,KARD;AASH,GAZJ;AAaA;AAED,OAAO,SAASY,cAAT,GAA0B;AAC7B,SAAO,CAACjB,QAAD,EAAWC,QAAX,KAAwB;AAC3BX,IAAAA,QAAQ,GAAGY,IAAX,CAAiBC,QAAD,IAAc;AACnCO,MAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACS,UAAIe,KAAK,GAAG7B,WAAW,CAACc,QAAQ,CAACW,IAAV,CAAvB;AACAd,MAAAA,QAAQ,CAACmB,uBAAuB,CAACD,KAAD,CAAxB,CAAR;AACH,KAJD;AAKH,GAND;AAOH;AAED,OAAO,SAASF,yBAAT,CAAmCJ,UAAnC,EAA+C;AAElD,SAAO;AACHN,IAAAA,IAAI,EAAEb,4BADH;AAEHc,IAAAA,OAAO,EAAEK;AAFN,GAAP;AAIH;AAED,OAAO,SAASO,uBAAT,CAAiCD,KAAjC,EAAwC;AAC3C,SAAO;AACHZ,IAAAA,IAAI,EAAEV,mBADH;AAEHW,IAAAA,OAAO,EAAEW;AAFN,GAAP;AAIH;AAED,OAAO,SAASE,yBAAT,CAAmCC,IAAnC,EAAyC;AAE5C,SAAO;AACHf,IAAAA,IAAI,EAAEX,0BADH;AAEHY,IAAAA,OAAO,EAAEc;AAFN,GAAP;AAIH;AAED,OAAO,SAASC,gBAAT,CAA0BD,IAA1B,EAAgCtB,OAAhC,EAAyC;AAC5C,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3BT,IAAAA,UAAU,CAAC6B,IAAD,EAAOA,IAAI,CAACR,EAAZ,CAAV,CAA0BX,IAA1B,CAAgCqB,OAAD,IAAa;AACjD;AACSvB,MAAAA,QAAQ,CAACoB,yBAAyB,CAACC,IAAD,CAA1B,CAAR;AACAtB,MAAAA,OAAO,CAACM,IAAR,CAAa,QAAb;AACH,KAJD;AAMH,GAPD;AAQH","sourcesContent":["import {\n    createPost,\n    formatPosts,\n    getPosts,\n    deletePost,\n    updatePost,\n} from '../../services/PostsService';\nimport {\n    CONFIRMED_CREATE_POST_ACTION,\n    CONFIRMED_DELETE_POST_ACTION,\n    CONFIRMED_EDIT_POST_ACTION,\n    CONFIRMED_GET_POSTS,\n} from './PostTypes';\n\nexport function deletePostAction(postId, history) {\n    return (dispatch, getState) => {\n        deletePost(postId).then((response) => {\n            dispatch(confirmedDeletePostAction(postId));\n            history.push('/posts');\n        });\n    };\n}\n\nexport function confirmedDeletePostAction(postId) {\n    return {\n        type: CONFIRMED_DELETE_POST_ACTION,\n        payload: postId,\n    };\n}\n\nexport function createPostAction(postData, history) {\n   \n\treturn (dispatch, getState) => {\n\t\tconsole.log(postData);\n\t\tconsole.log('create');\n        createPost(postData).then((response) => {\n\t\t\t//console.log(response);\n            const singlePost = {\n                ...postData,\n                id: response.data.name,\n            };\n            dispatch(confirmedCreatePostAction(singlePost));\n            history.push('/posts');\n        });\n    };\n}\n\nexport function getPostsAction() {\n    return (dispatch, getState) => {\n        getPosts().then((response) => {\n\t\t\tconsole.log(response);\n            let posts = formatPosts(response.data);\n            dispatch(confirmedGetPostsAction(posts));\n        });\n    };\n}\n\nexport function confirmedCreatePostAction(singlePost) {\n\t\n    return {\n        type: CONFIRMED_CREATE_POST_ACTION,\n        payload: singlePost,\n    };\n}\n\nexport function confirmedGetPostsAction(posts) {\n    return {\n        type: CONFIRMED_GET_POSTS,\n        payload: posts,\n    };\n}\n\nexport function confirmedUpdatePostAction(post) {\n\n    return {\n        type: CONFIRMED_EDIT_POST_ACTION,\n        payload: post,\n    };\n}\n\nexport function updatePostAction(post, history) {\n    return (dispatch, getState) => {\n        updatePost(post, post.id).then((reponse) => {\n\t\t\t//console.log(reponse);\n            dispatch(confirmedUpdatePostAction(post));\n            history.push('/posts');\n        });\n\t\t\t\n    };\n}\n"]},"metadata":{},"sourceType":"module"}